{"ast":null,"code":"var _jsxFileName = \"/Users/alokmishra/Desktop/stackline-frontend/src/components/SalesGraph.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SalesGraph = () => {\n  _s();\n  const salesData = useSelector(state => state.product.data[0].sales);\n\n  // Create a new array from salesData and sort it\n  const sortedData = [...salesData].sort((a, b) => new Date(a.weekEnding) - new Date(b.weekEnding));\n\n  // Function to format the date into month names and year\n  const formatDate = date => {\n    const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    const d = new Date(date);\n    return `${monthNames[d.getMonth()]} ${d.getFullYear()}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-title\",\n      children: \"Retail Sales\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"{600}\",\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: sortedData,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"weekEnding\",\n          tickFormatter: formatDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          verticalAlign: \"top\",\n          height: 36\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"retailSales\",\n          stroke: \"#4285F4\",\n          strokeWidth: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"wholesaleSales\",\n          stroke: \"#888888\",\n          strokeWidth: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(SalesGraph, \"Tc/qGrMHujjEQcUj24f0IEBJwTU=\", false, function () {\n  return [useSelector];\n});\n_c = SalesGraph;\nexport default SalesGraph;\nvar _c;\n$RefreshReg$(_c, \"SalesGraph\");","map":{"version":3,"names":["React","useSelector","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","SalesGraph","_s","salesData","state","product","data","sales","sortedData","sort","a","b","Date","weekEnding","formatDate","date","monthNames","d","getMonth","getFullYear","children","className","fileName","_jsxFileName","lineNumber","columnNumber","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","tickFormatter","verticalAlign","type","stroke","strokeWidth","_c","$RefreshReg$"],"sources":["/Users/alokmishra/Desktop/stackline-frontend/src/components/SalesGraph.js"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\n} from 'recharts';\n\nconst SalesGraph = () => {\n  const salesData = useSelector(state => state.product.data[0].sales);\n\n  // Create a new array from salesData and sort it\n  const sortedData = [...salesData].sort((a, b) => new Date(a.weekEnding) - new Date(b.weekEnding));\n\n  // Function to format the date into month names and year\n  const formatDate = (date) => {\n    const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    const d = new Date(date);\n    return `${monthNames[d.getMonth()]} ${d.getFullYear()}`;\n  };\n\n  return (\n    <div>\n      <div className=\"graph-title\">Retail Sales</div>\n      <ResponsiveContainer width=\"100%\" height=\"{600}\">\n        <LineChart\n          data={sortedData}\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"weekEnding\" tickFormatter={formatDate} />\n          <YAxis />\n          <Tooltip />\n          <Legend verticalAlign=\"top\" height={36}/>\n          <Line type=\"monotone\" dataKey=\"retailSales\" stroke=\"#4285F4\" strokeWidth={2} />\n          <Line type=\"monotone\" dataKey=\"wholesaleSales\" stroke=\"#888888\" strokeWidth={2} />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default SalesGraph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}