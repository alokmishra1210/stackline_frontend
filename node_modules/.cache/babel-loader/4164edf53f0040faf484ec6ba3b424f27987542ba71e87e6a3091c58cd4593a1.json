{"ast":null,"code":"var _jsxFileName = \"/Users/alokmishra/Desktop/stackline-frontend/src/components/SalesGraph.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SalesGraph = () => {\n  _s();\n  const salesData = useSelector(state => state.product.data[0].sales);\n\n  // Function to format the date into month names\n  const formatDate = date => {\n    const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    return monthNames[new Date(date).getMonth()];\n  };\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 300,\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      data: salesData,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"weekEnding\",\n        tickFormatter: formatDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {\n        verticalAlign: \"top\",\n        height: 36\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"retailSales\",\n        stroke: \"#4285F4\",\n        strokeWidth: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"wholesaleSales\",\n        stroke: \"#888888\",\n        strokeWidth: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(SalesGraph, \"Tc/qGrMHujjEQcUj24f0IEBJwTU=\", false, function () {\n  return [useSelector];\n});\n_c = SalesGraph;\nexport default SalesGraph;\nvar _c;\n$RefreshReg$(_c, \"SalesGraph\");","map":{"version":3,"names":["React","useSelector","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","SalesGraph","_s","salesData","state","product","data","sales","formatDate","date","monthNames","Date","getMonth","width","height","children","margin","top","right","left","bottom","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","tickFormatter","verticalAlign","type","stroke","strokeWidth","_c","$RefreshReg$"],"sources":["/Users/alokmishra/Desktop/stackline-frontend/src/components/SalesGraph.js"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\n} from 'recharts';\n\nconst SalesGraph = () => {\n  const salesData = useSelector(state => state.product.data[0].sales);\n\n  // Function to format the date into month names\n  const formatDate = (date) => {\n    const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    return monthNames[new Date(date).getMonth()];\n  };\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={300}>\n      <LineChart\n        data={salesData}\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"weekEnding\" tickFormatter={formatDate} />\n        <YAxis />\n        <Tooltip />\n        <Legend verticalAlign=\"top\" height={36}/>\n        <Line type=\"monotone\" dataKey=\"retailSales\" stroke=\"#4285F4\" strokeWidth={2} />\n        <Line type=\"monotone\" dataKey=\"wholesaleSales\" stroke=\"#888888\" strokeWidth={2} />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default SalesGraph;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SACEC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,MAAM,EAAEC,mBAAmB,QAC7E,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElB,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,SAAS,GAAGb,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACC,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC;;EAEnE;EACA,MAAMC,UAAU,GAAIC,IAAI,IAAK;IAC3B,MAAMC,UAAU,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IACvG,OAAOA,UAAU,CAAC,IAAIC,IAAI,CAACF,IAAI,CAAC,CAACG,QAAQ,CAAC,CAAC,CAAC;EAC9C,CAAC;EAED,oBACEZ,OAAA,CAACF,mBAAmB;IAACe,KAAK,EAAC,MAAM;IAACC,MAAM,EAAE,GAAI;IAAAC,QAAA,eAC5Cf,OAAA,CAACT,SAAS;MACRe,IAAI,EAAEH,SAAU;MAChBa,MAAM,EAAE;QAAEC,GAAG,EAAE,CAAC;QAAEC,KAAK,EAAE,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAE,CAAE;MAAAL,QAAA,gBAEnDf,OAAA,CAACL,aAAa;QAAC0B,eAAe,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvCzB,OAAA,CAACP,KAAK;QAACiC,OAAO,EAAC,YAAY;QAACC,aAAa,EAAEnB;MAAW;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzDzB,OAAA,CAACN,KAAK;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACTzB,OAAA,CAACJ,OAAO;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXzB,OAAA,CAACH,MAAM;QAAC+B,aAAa,EAAC,KAAK;QAACd,MAAM,EAAE;MAAG;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACzCzB,OAAA,CAACR,IAAI;QAACqC,IAAI,EAAC,UAAU;QAACH,OAAO,EAAC,aAAa;QAACI,MAAM,EAAC,SAAS;QAACC,WAAW,EAAE;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/EzB,OAAA,CAACR,IAAI;QAACqC,IAAI,EAAC,UAAU;QAACH,OAAO,EAAC,gBAAgB;QAACI,MAAM,EAAC,SAAS;QAACC,WAAW,EAAE;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAE1B,CAAC;AAACvB,EAAA,CAzBID,UAAU;EAAA,QACIX,WAAW;AAAA;AAAA0C,EAAA,GADzB/B,UAAU;AA2BhB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}